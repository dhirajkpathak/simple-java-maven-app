<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.resilinc.file</groupId>
	<artifactId>resilinc-ecmservice</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	
	<name>ECM Service</name>
	<description>Electronic Content (File) Management Service</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.3.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<spring.data.redis>1.7.6.RELEASE</spring.data.redis>
		<jedis.client>2.9.0</jedis.client>
		<spring.cloud.dependencies.version>Camden.SR5</spring.cloud.dependencies.version>
		<admin.client.version>1.4.5</admin.client.version>
		<spring.kafka.version>1.1.1.RELEASE</spring.kafka.version>
		<hadoop-hdfs.version>2.7.3</hadoop-hdfs.version>
		<hadoop-common.version>2.7.3</hadoop-common.version>
		<guava.version>21.0</guava.version>
		<docker.images.registry>172.16.0.154:5050</docker.images.registry>
		<application.basedir>/usr/local/application</application.basedir>
	</properties>

	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- HDFS Libraries -->
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>${hadoop-hdfs.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop-common.version}</version>
			<exclusions>
				<exclusion>
					<groupId>jdk.tools</groupId>
					<artifactId>jdk.tools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- HDFS Libraries End -->

		<!-- DAL -->

		<dependency>
			<groupId>com.resilinc.data</groupId>
			<artifactId>resilinc-dataaccess</artifactId>
			<version>1.0.0</version>
		</dependency>
		
		
		<!-- DAL End -->

		<!-- Redis Libraries -->

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring.data.redis}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.client}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<!-- Redis Libraries End -->

		<!-- Admin Server, Config Client And Hystrix -->

		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${admin.client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- Admin Server, Config Client And Hystrix End -->

		<!-- PowerMockito Libraries -->

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.5</version>
			<exclusions>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.20.0-GA</version><!--$NO-MVN-MAN-VER$ -->
			<scope>test</scope>
		</dependency>

		<!-- PowerMockito Libraries End -->

	</dependencies>

	<dependencyManagement>

		<dependencies>

			<!-- Spring Cloud BOM -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<!-- Profiles -->

	<profiles>

		<profile>
			<id>localhost</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<active.profile>localhost</active.profile>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<active.profile>dev</active.profile>
			</properties>
		</profile>
		<profile>
			<id>qa</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<active.profile>qa</active.profile>
			</properties>
		</profile>
		<profile>
			<id>qa-environment</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<active.profile>qa-environment</active.profile>
			</properties>
		</profile>
		<profile>
			<id>staging</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<active.profile>staging</active.profile>
			</properties>
		</profile>
		<profile>
			<id>dcos</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<active.profile>dcos</active.profile>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<active.profile>production</active.profile>
			</properties>
		</profile>

	</profiles>

	<!-- Profiles End -->

	<build>

		<!-- For Filtering Place holders in property files -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.resilinc.file.ECMApplication</mainClass>
					<layout>ZIP</layout>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*.java</exclude>
					</excludes>
					<junitArtifactName>junit:junit</junitArtifactName>
					<argLine>-Xmx512m</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>checkStyle.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
						<configuration>
							<name>build.time</name>
							<pattern>yyyy-MM-dd't'HH-mm-ss.SSz</pattern>
							<locale>en_US</locale>
							<timeZone>IST</timeZone>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Docker Containerization -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>

					<imageName>${docker.images.registry}/${project.artifactId}</imageName>
					<imageTags>
						<imageTag>${project.version}b${build.time}</imageTag>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>

					<pullOnBuild>true</pullOnBuild>
					<baseImage>${docker.images.registry}/microservice</baseImage>

					<resources>
						<resource>
							<directory>${project.basedir}</directory>
							<include>*.pfx</include>
							<include>*.cer</include>
							<targetPath>${application.basedir}/</targetPath>
						</resource>

						<resource>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.${project.packaging}</include>
							<targetPath>${application.basedir}/</targetPath>
						</resource>
					</resources>

					<runs>
			<run>echo -e &quot;#!/bin/sh\n\n${FILEBEAT_HOME}/filebeat -e -c ${FILEBEAT_HOME}/filebeat.yml -d &quot;publish&quot; > ${FILEBEAT_HOME}/filebeat.log 2>&amp;1 &amp;\njava -jar ${application.basedir}/${project.build.finalName}.${project.packaging} \$*\n&quot; > ${application.basedir}/start-application.sh &amp;&amp; chmod -R 777 ${application.basedir}</run>

					</runs>
					<squashRunCommands>false</squashRunCommands>

					<env>
						<APPLICATION_NAME>${project.name}</APPLICATION_NAME>
					</env>

					<workdir>${application.basedir}/</workdir>
					<entryPoint>["${application.basedir}/start-application.sh"]</entryPoint>

				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
